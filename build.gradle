plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'war'
	id 'idea'
	id 'checkstyle'
	id 'jacoco'
	id 'org.sonarqube' version '3.0'
}

group = 'com.softserveinc'
sourceCompatibility = '11'

bootRun {
	main = "com.softserveinc.dokazovi.DokazoviApplication"
}

checkstyleMain {
	configFile = file("${rootDir}/checkstyle.xml")
}

checkstyleTest {
	configFile = file("${rootDir}/checkstyle.xml")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

springBoot {
	buildInfo()
}

dependencies {
	compile group: 'org.springframework.security', name: 'spring-security-oauth2-client'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	compile group: 'javax.validation', name: 'validation-api', version: '2.0.0.Final'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.4.0'
	compile group: 'javax.mail', name: 'javax.mail-api', version: '1.6.2'
	compile 'com.google.http-client:google-http-client-gson:1.19.0'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'com.google.apis', name: 'google-api-services-analytics', version: 'v3-rev161-1.25.0'

	implementation 'org.flywaydb:flyway-core'
	implementation "org.mapstruct:mapstruct:${MAPPER_VERSION}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${MAPPER_VERSION}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${MAPPER_VERSION}"
	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"

	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation "com.h2database:h2"
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.5"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
	}
}

sonarqube {
	tasks['sonarqube'].dependsOn jacocoTestReport
	properties {
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.projectKey", "ita-social-projects_dokazovi-be"
		property "sonar.organization", "ita-social-projects"
		property "sonar.jacoco.reportPaths", "$buildDir/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.coverage.exclusions", "**/*.sql," +
				"src/main/java/com/softserveinc/dokazovi/entity/**," +
				"src/main/java/com/softserveinc/dokazovi/dto/**," +
				"src/main/java/com/softserveinc/dokazovi/exception/**," +
				"src/main/java/com/softserveinc/dokazovi/security/**," +
				"src/main/java/com/softserveinc/dokazovi/config/**"
	}
}